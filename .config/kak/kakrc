source "%val{config}/bindings.kak"

def -override light-mode %{
	colorscheme default
	face global PrimaryCursor white,black
	face global SecondaryCursor white,yellow
	face global SecondarySelection white,blue+fg
	face global comment rgb:888888+i
	face global value bright-magenta
	face global WrapMarker rgb:cccccc
	face global Whitespace rgb:cccccc+f
	face global Default rgb:1c1c1c,default
	face global MenuBackground white,bright-green
}
def -override dark-mode %{
	colorscheme tomorrow-night
	face global Default rgb:c5c8c6
	face global BufferPadding rgb:c5c8c6
	face global Whitespace rgb:555555+f
}

light-mode
eval %sh{
	if [[ `defaults read -g AppleInterfaceStyle 2>/dev/null` = 'Dark' ]]; then
		echo "dark-mode"
	fi
}

face global search default+bi
add-highlighter -override global/search dynregex '%reg{/}' 0:search

set global grepcmd 'rg --no-heading -n --column'
set global scrolloff 8,5

def -override ide %{
	rename-client main
	set global jumpclient main
	new rename-client tools
	set global toolsclient tools
	set global docsclient tools
		hook window NormalIdle .* %{
			lsp-diagnostics
		}
}

set global modelinefmt '%val{bufname} {{context_info}} {{mode_info}} %val{client}'
def -override -params 1 title %{
	# nop %sh{ printf "\e]0;%s\a" "$1" > $kak_client_env_TTY } 
	nop %sh{ tmux rename-window "$1" } 
}
hook global WinDisplay .* %{
	title %opt{current_bufname}
}

hook global InsertChar .* %{ exec '<a-;>;' }

eval %sh{
	if [ ! $kak_opt_lsp_cmd ]; then
		kak-lsp -c $HOME/.config/kak-lsp/kak-lsp.toml --kakoune -s $kak_session # -vvv --log /tmp/kak-lsp.log
	fi
}
hook -once global WinSetOption filetype=(c|cpp|rust|python|go|javascript|typescript|svelte|json|css) %{
	set global lsp_cmd "kak-lsp -s %val{session} -c $HOME/.config/kak-lsp/kak-lsp.toml"  #-vvv --log /tmp/kak-lsp.log
	try %{
		lsp-enable-window
		echo -debug "Enabling LSP for filetype %opt{filetype}"
		lsp-auto-hover-enable
		set global lsp_hover_max_lines 10
		map window user <space> ':enter-user-mode lsp<ret>' -docstring "LSP"
		map window normal <c-r> ':lsp-rename-prompt<ret>' -docstring 'rename'
		map window normal <c-w> ':lsp-formatting-sync<ret>'
		face global DiagnosticWarning default,rgb:ffffcc+u
		face global DiagnosticError default,rgb:ffcccc+u
		face buffer InlayDiagnosticError red+i
		face buffer InlayDiagnosticWarning bright-yellow+i
		lsp-diagnostic-lines-disable window
		lsp-inlay-diagnostics-enable window

		hook window NormalIdle .* %{
			rmhl window/lsp_diagnostics
			lsp-inlay-diagnostics-enable window
		}
		hook window ModeChange push:normal:insert %{
			lsp-inlay-diagnostics-disable window
		}
	}
}

hook global WinSetOption filetype=(go|rust) %{
	hook window -group semantic-tokens BufReload .* lsp-semantic-tokens
	hook window -group semantic-tokens NormalIdle .* lsp-semantic-tokens
	hook window -group semantic-tokens InsertIdle .* lsp-semantic-tokens
	hook -once -always window WinSetOption filetype=.* %{
		remove-hooks window semantic-tokens
	}
}

hook global BufSetOption filetype=(html|css|json|yaml|md|graphql) %{
	set buffer formatcmd "prettier --parser %opt{filetype}"
	hook buffer BufWritePre .* format-buffer
}
hook global BufSetOption .*?\.(svelte|html|md) %{
	map buffer insert <c-s> '<a-;>!emmet '
	map buffer normal ',' '!emmet '
}

set global tabstop 2
set global indentwidth 0
hook global BufSetOption filetype=(c|cpp|rust|ruby) %{
	set buffer indentwidth 2
}
hook global BufSetOption filetype=(python) %{
	set buffer indentwidth 4
}

add-highlighter -override global/ number-lines -relative -hlcursor
add-highlighter -override global/ show-whitespaces
add-highlighter -override global/ wrap -marker >> -word


hook global BufCreate (.*/)?(\.kakrc\.local) %{
	set buffer filetype kak
}
hook global BufCreate .*?\.[cm]js %{
	set buffer filetype javascript
}

def -override reload %{
	source ~/.config/kak/kakrc
}

try %{ source .kakrc.local }

